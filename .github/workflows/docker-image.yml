name: Docker CI/CD Pipelines

env:
    TAG : "egorba/getting-started:latest"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  Pipline:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3
    - name: Vault
      run: |
          docker run --rm --detach --name vault -p 8200:8200 -e 'VAULT_DEV_ROOT_TOKEN_ID=devtoken' -e 'SKIP_SETCAP=1' vault
          pip install vault-cli
          export VAULT_CLI_TOKEN=devtoken
          vault-cli set DATABASE DATABASE_NAME="${{ secrets.DATABASE_NAME }}"
          vault-cli set DATABASE DATABASE_COLUMN="${{ secrets.DATABASE_COLUMN }}"
          vault-cli set DATABASE DATABASE_USER="${{ secrets.DATABASE_USER }}"
          vault-cli set DATABASE DATABASE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}"
          vault-cli set DATABASE DATABASE_HOST="${{ secrets.DATABASE_HOST }}"
          vault-cli set DATABASE DATABASE_N="${{ secrets.DATABASE_N }}"

    - uses: actions/checkout@v3
    - name: Login to DockerHub
      run: docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_TOKEN}}
      
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $TAG
      
    - uses: actions/checkout@v3
    - name: Push the Docker image
      run: docker push $TAG
      
    - uses: actions/checkout@v3
    - name: Build the Docker Compose
      run: |
          touch .env
          echo DATABASE_NAME=$(vault-cli set DATABASE DATABASE_NAME) >> .env
          echo DATABASE_COLUMN=$(vault-cli set DATABASE DATABASE_COLUMN) >> .env
          echo DATABASE_USER=$(vault-cli set DATABASE DATABASE_USER) >> .env
          echo DATABASE_PASSWORD=$(vault-cli set DATABASE DATABASE_PASSWORD) >> .env
          echo DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo DATABASE_N=$(vault-cli set DATABASE DATABASE_N) >> .env
          docker-compose build
      
    - uses: actions/checkout@v3
    - name: Run the Docker Compose
      run: |
          echo DATABASE_NAME="${{ secrets.DATABASE_NAME }}" >> .env
          echo DATABASE_COLUMN="${{ secrets.DATABASE_COLUMN }}" >> .env
          echo DATABASE_USER="${{ secrets.DATABASE_USER }}" >> .env
          echo DATABASE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo DATABASE_HOST="${{ secrets.DATABASE_HOST }}" >> .env
          echo DATABASE_N="${{ secrets.DATABASE_N }}" >> .env
          docker-compose up
    
